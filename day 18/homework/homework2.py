#sorted()   მაგალითი 1:
#my_list = [3, 1, 4, 1, 5, 9, 2, 6]
#print(sorted(my_list))   [1, 1, 2, 3, 4, 5, 6, 9] (ეს ფუნქცია იღებს სიის ელემენტებს და აბრუნებს ახალი სიას, რომელიც  სორტირებულია.)
#მაგალითი 2:
#my_list = ['apple', 'banana', 'cherry']
#print(sorted(my_list, reverse=True))   ['cherry', 'banana', 'apple']
#ამ შემთხვევაში, ელემენტები ინახება გადმოწმებული პირადი მნიშვნელობებით და სორტირება ხდება პირიქით.
                                                      

                                    #sum()
#მაგალითი 1:
#numbers = [1, 2, 3, 4, 5]
#print(sum(numbers))   15
#ეს ფუნქცია ამოიღებს ყველა რიცხვის ჯამს სიიდან.
#მაგალითი 2:
#numbers = [10, 20, 30]
#print(sum(numbers))   60
#ამ შემთხვევაში, 10 + 20 + 30 = 60.
                                            #len()

#მაგალითი 1:
# my_string = "Hello, world!"
#print(len(my_string))   13
#ეს ფუნქცია ითვლის სტრინგის სიმბოლოების რაოდენობას.
#მაგალითი 2:
#my_list = [1, 2, 3, 4, 5]
#print(len(my_list))   5
#იმავე ფორმატში, ეს ფუნქცია ითვლის სიაში არსებულ ელემენტებს.
                                                                         #join()



#მაგალითი 1:
#words = ['Hello', 'world']
#print(' '.join(words))   'Hello world'
#ეს ფუნქცია აერთიანებს რამდენიმე სტრინგს ერთ სტრინგში, მოათავსებს მათ შორის სპეციალურ ტაბულას.

#მაგალითი 2:

#words = ['apple', 'banana', 'cherry']
#print('-'.join(words))   'apple-banana-cherry'

                                                        #range()


#print(list(range(5)))  # [0, 1, 2, 3, 4]
#ეს ფუნქცია ქმნის რიცხვების შუალედს.
#print(list(range(1, 6)))  # [1, 2, 3, 4, 5]




                                      

